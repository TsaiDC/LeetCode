Vector

    lower_bound：找出vector中「大於或等於」val的「最小值」的位置：
        auto it = lower_bound(v.begin(), v.end(), val);
    upper_bound：找出vector中「大於」val的「最小值」的位置：
        auto it = upper_bound(v.begin(), v.end(), val);

    [*]MAP 也可以用這二個api

Sort 用法
    std::sort (sortedTime.begin(), sortedTime.end(), mycompare);
    std::sort (sortedTime.begin(), sortedTime.end(), std::less<int>()); 小到大
    
    升序：std::sort(begin, end, less<Type>());
    降序：std::sort(begin, end, greater<Type>());   
    bool mycompare(int a, int b) {
        return a > b; // 降序排列
    }

String:
    找substr
    int find_first_of("xx")
    
priority_queue:
    priority_queue<T> pq; 預設由大排到小
    priority_queue<T, vector<T>, greater<T> > pq;  改成由小排到大
    priority_queue<T, vector<T>, cmp> pq; 自行定義 cmp 排序
